1. Show the red-black tree that results from inserting the following sequence of integers into a tree that is initially empty:

A. 2   7   5   3   1   8  

outcome: 
            (5)       
          /     \     
        (2)     (7)   
        /      /   \   
      [1]    [3]   [8] 




B. 99   77   88   66   55   11   22   47   57

              (66)       
          /         \     
        [22]        [88]   
        /  \        /   \   
     (11)  (55)   (77) (99) 
           /  \
         [47] [57]



2. Assume that the following arrays are max heaps. For each array below, determine if the array represents a valid max heap and, if not, briefly explain how the heap properties are violated. Recall the element at index 0 in skipped, which is indicated below with an X.

A. Invalid. Because there is a hole in the array, which makes the resulting binary tree incomplete.

B. Invalid. The second item has priority 10, but itâ€™s children has higher priority, which violates the ordering constrain in a max heap. 

C. Valid. It follows both order and shape constraints.




3. Consider a priority queue that is used to store integer priorities and is implemented with a max heap that initially is empty and has 11 elements. Show the max heap array that results from inserting the following (use X and - as indicated in the question below):


After insertion: 99 72 43 68 21 33 21 9 51 




4. Consider a priority queue that is used to store integer priorities and is implemented with a min heap that currently contains (where X is the skipped element 0, and - is an unused element):


A. 13 26 22 34 27 37 30 37 82 29  

B. 22 26 29 34 27 37 30 37 82

