import java.util.Enumeration;
import java.util.Iterator;

import javax.swing.tree.TreeNode;


public class CS367HW6_2 {
	
	public static int findLargest(Treenode tree){
		// base cases
		if(tree == null) return 0;	
		if (tree.getChildren().isEmpty()) return 1;		
		// start the recursive case
		int max = 0;
		Iterator<Treenode> itr = tree.getChildren().iterator();
		while(itr.hasNext()){
			int value = itr.next().getData();
			if(value > max) max = value;
		}
		return max;
	}
	
	
	public int static countMatches(BinaryTreenode<T> tree, T item){
		
		return 0;
	}
	
	public static void main(String [] args){
		
		Treenode<Integer> t = null; 
		
//		Treenode<Integer> t = new Treenode<Integer>();
		
//		System.out.println(t.getData());
//		System.out.println(t.getChildren());
	}
}
