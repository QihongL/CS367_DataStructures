
public class SimpleQueue<E> implements QueueADT<E> {

	private
	private int numItems;

	// constructor
	public SimpleQueue(){

	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void enqueue(E ob) {
		// TODO Auto-generated method stub
		// check for full array and expand if necessary
		if (items.length == numItems) {
			E[] tmp = (E[])(new Object[items.length*2]);
			System.arraycopy(items, frontIndex, tmp, frontIndex,
					items.length-frontIndex);
			if (frontIndex != 0) {
				System.arraycopy(items, 0, tmp, items.length, frontIndex);
			}
			items = tmp;
			rearIndex = frontIndex + numItems - 1;
		}

		// use auxiliary method to increment rear index with wraparound
		rearIndex = incrementIndex(rearIndex);

		// insert new item at rear of queue
		items[rearIndex] = ob;
		numItems++;
	}

	@Override
	public E dequeue() throws EmptyQueueException {
		// TODO Auto-generated method stub
		return null;
	}

}
