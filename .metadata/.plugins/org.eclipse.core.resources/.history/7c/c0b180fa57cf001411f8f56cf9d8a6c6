import java.util.Enumeration;
import java.util.Iterator;

import javax.swing.tree.TreeNode;


public class CS367HW6_2 {
	

	
	public static <T> int countMatches(BinaryTreenode<T> tree, T item){
    	if (item == null) throw new IllegalArgumentException();
    	// base cases 
    	if (tree == null) return 0;
    	
    	if (tree.getLeft() == null && tree.getRight() == null) {
    		if(tree.getData().equals(item)) return 1;
    		else return 0;
    	}
    	
    	if(tree.getData().equals(item)) 
    		return 1 + countMatches(tree.getLeft(), item) + countMatches(tree.getLeft(), item);
		else return 0;
 
    }

	
	public static void main(String [] args){
			
		Treenode<Integer> t = new Treenode<Integer>();
		t.setData(1);
		System.out.println();
		System.out.println(t.getData());
		
		System.out.println(t.getChildren());
	}
}
