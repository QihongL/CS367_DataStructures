import java.util.Iterator;


class Treenode <T> implements Iterable<Treenode<T>>{

	// fields
	private int data;
	private ListADT<Treenode> children;

	// methods
	public int getData() { 
		return data; 
	}
	
	public void setData(int data) { 
		this.data = data; 
	}
	
	public ListADT<Treenode> getChildren() { 
		return children; 
	}

	@Override
	public Iterator<Treenode<T>> iterator() {
		// TODO Auto-generated method stub
		return null;
	}
	
	public static int findLargest(Treenode tree){
		// base cases
		if(tree == null) return 0;	
		if (tree.getChildren().isEmpty()) return tree.getData();		
		// start the recursive case
		int maxData = 0;
		int data = tree.getData();
		if(data > maxData) 
			maxData = data;
//		return Math.max(maxData, findLargest(tree.getChildren()));
	}
	

}
