
public class Testing {

	public static void main(String[] args) throws EmptyQueueException {
		SimpleQueue<String> q = new SimpleQueue<String>();
		System.out.println(q.size());
		q.enqueue("a");
		System.out.println(q.toString());
		System.out.println(q.size());
		q.enqueue("b");
		System.out.println(q.toString());
		
		
		q.enqueue("c");
		System.out.println(q.toString());
		
		q.enqueue("c");
		System.out.println(q.toString());
		
		q.enqueue("d");
		System.out.println(q.toString());
		
		System.out.println(q.dequeue());
		System.out.println(q.toString());
		
		System.out.println(q.dequeue());
		System.out.println(q.toString());
		System.out.println(q.dequeue());
		System.out.println(q.toString());
		
		q.enqueue("1");
		System.out.println(q.toString());
		
		q.enqueue("1");
		System.out.println(q.toString());
		q.enqueue("1");
		System.out.println(q.toString());
		q.enqueue("1");
		System.out.println(q.toString());
		q.enqueue("1");
		System.out.println(q.toString());
		System.out.println(q.size());
		
		
		SimpleStack<String> s = new SimpleStack<String>();
		System.out.println(s.toString());
		s.push("a");
		s.push("b");
		s.push("c");
		System.out.println(s.toString());
		s.push("d");
		s.push("e");
		System.out.println(s.toString());
		
		
		
	}

}
