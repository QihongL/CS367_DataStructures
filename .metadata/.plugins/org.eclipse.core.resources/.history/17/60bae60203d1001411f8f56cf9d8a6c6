
public class BSTVnode <K extends Comparable<K>, V>{
    // *** fields ***
    private BSTnode<K, V> root; // ptr to the root of the BST
 
    // *** constructor ***
    public BST() { root = null; } 
    
    // *** methods ***  
    
    public void insert(K key, V value) throws DuplicateException {...}
      // add key and associated value to this BST;
      // error if key is already there
      
    public void delete(K key) {...}
      // remove the node containing key from this BST if it is there;
      // otherwise, do nothing
      
    public V lookup(K key) {...}
      // if key is in this BST, return its associated value; otherwise, return null
     
    public void print(PrintStream p) {...}
      // print the values in this BST in sorted order (to p)
}
