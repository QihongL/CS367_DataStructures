import java.util.ArrayList;


public class sum_recursion {

	// practice recursion
	public static int sum(Listnode<Integer> node){
		if(node == null) return 0;
		System.out.println(node.getData());
		return node.getData() + sum(node.getNext());
	}

	/**
	 * initialize the listnodes with a item array
	 * */
	public static <E> void initListnodes(ArrayList<E>items, Listnode<E> head){
		Listnode<E> cur = head;
		for(E e : items){
			cur.setNext(new Listnode<E>(e));
			cur = cur.getNext();
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		// testing Integer Arraylist
		Listnode<Integer> head0 = new Listnode<Integer>(0);
		ArrayList<Integer> intList = new ArrayList<Integer>();
//		intList.add(3);intList.add(3);intList.add(2);intList.add(2);
//		intList.add(3);intList.add(3);intList.add(3);intList.add(3);
//		intList.add(2);
		for (int i = 0; i < 10; i ++){
			intList.add(i);
		}
		initListnodes(intList, head0);
		printListnodes(head0);
		
		System.out.println(sum(head0));
		
		printListnodes(head0);
		
	}

}
