import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;


public class FileSystemMain {

	private static Scanner scnr;
	private static File inputFile;
	private static SimpleFileSystem fileSys;

	public static void main(String[] args) {
		// check if the length is valid
		if(args.length == 1) {
			inputFile = new File(args[0]);
		} else {
			// TODO what to print out?
			System.out.println("Usage: java FileSystemMain FileName");
			System.exit(0);
		}
		
		// create file structure in accordance to the info from inputFile
		processInputFile(inputFile);
		// fire up the command interface! 
		cmdInterface();

		
		System.out.println("REACH THE END OF THE PROGRAM!")
	}	// end of the main method	

	
	
	private static void processInputFile(File inputFile){
		// connect the inputFile to a scanner 
		try {
			scnr = new Scanner(inputFile);
		} catch (FileNotFoundException e) { 
			e.printStackTrace();
		}

		// read and create the root folder
		String rootName = scnr.nextLine();
		makeRoot(rootName);
		
		// read and create users  
		String [] userNames = scnr.nextLine().split(", ");
		makeUsers(userNames);
		
		// create the file sys
//		fileSys = new SimpleFileSystem(_root, users);

		// process the inputFile, create the file system
		System.out.println("THE SUB-FOLDERS: ");
		while(scnr.hasNext()){
			System.out.println(scnr.nextLine());
			// create folders and files 
		}
	}
	
	/**
	 * 
	 * @param userNames
	 */
	private static void makeUsers(String[] userNames) {
		System.out.println("THE USERS NAMES: ");
		// loop over every user name
		ArrayList<User> users = new ArrayList<User>();
		for(int i = 0 ; i < userNames.length; i ++){
			System.out.println(userNames[i]);
			// create users
			users.add(new User (userNames[i]));
		}
	}



	private static void makeRoot(String rootName) {
		System.out.print("THE ROOT FOLDER: ");
		System.out.println(rootName);
		// TODO Create the root folder
		// TODO who's the owner? what's the path? parent for the root? 
//		SimpleFolder rootFolder = new SimpleFolder(name, path, parent, owner);
	}



	private static void cmdInterface() {
		// TODO Auto-generated method stub
		
	}

}
